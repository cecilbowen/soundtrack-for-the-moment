const TRIUMPHANT = [
  "https://www.youtube.com/watch?v=SBq-nM53lQM", //Food Wars - Study Both Sweet and Sour!
  "https://www.youtube.com/watch?v=Jm7CJJ5OZAQ", //Food Wars - The Dish Toward Tomorrow
  "https://www.youtube.com/watch?v=y3FL9nQgq8M", //Haikyuu - Team Potential
  "https://www.youtube.com/watch?v=VRkOpEnTcNk", //Sketch 3 - Against All Odds
  "https://www.youtube.com/watch?v=RaG-fNJLLUk", //DanMachi - Heroic Desire (Bell vs Minotaur)
  "https://youtu.be/7d8iM21dc5M", //Monster Hunter World - Victory
];

const HOPEFUL = [
  "https://www.youtube.com/watch?v=C4VpEaM9ZhA", //Food Wars - Song of Hope (Star Glass Version)
  "https://www.youtube.com/watch?v=n608d8oQiSM", //My Hero Academia - You Can Be a Hero
  "https://youtu.be/1Ne7oNIMJyA", //Chihayafuru - Main Theme
  "https://youtu.be/cu_cq9WatBY", //Naruto Shippuden - Experienced Many Battles
  "https://youtu.be/4PuP7IkpRLU", //Attack on Titan - Counterattack Mankind
  "https://youtu.be/id3JORLgN9I", //Robotics Notes - Main Theme
  "https://youtu.be/t2tGEiYU9KU", //Code Geass - Madder Sky
  "https://youtu.be/uu94eOQqYP4", //Magi - Enfin Apparu
];

const WITNESS_FOOD = [
  "https://www.youtube.com/watch?v=lAt4H-SGWgQ", //Food Wars - Welcome to the World of Gourmet Foods!
  "https://www.youtube.com/watch?v=q_AC1hKdGq8", //Food Wars - The Palate that Transcends the Heavens
  "https://youtu.be/Uau48wh5CeI", //Puccini - Turandot: Nessun Dorma
  "https://youtu.be/rvQvcLXHWI4", //Verdi - La Traviata: Drinking Song
  "https://youtu.be/iyDOtpP_TPo", //Mangia! Italian Dinner Night - When In Rome
];

const SAD = [
    "https://www.youtube.com/watch?v=FoY2pbNhK4I", //Naruto - Sadness and Sorrow
    "https://www.youtube.com/watch?v=RwWdqM-58M8", //Naruto - Shirohae
    "https://www.youtube.com/watch?v=UTo7E0evQWw", //Naruto - Sadness and Sorrow (Piano Version) Cover by Michael Tai
    "https://www.youtube.com/watch?v=qO_-b_1VWEk", //Code Vein - Memory of the Lost
    "https://www.youtube.com/watch?v=kUzBQbajbvQ", //NieR - Grandma
];

const VILLAIN = [
    "https://www.youtube.com/watch?v=iXJ4HZ3-248", //Naruto Shippuden - Sasuke's Revolution Theme
    "https://www.youtube.com/watch?v=0MOlvNiTxUI", //Spider Man 3 - The Sandman Rises
    "https://www.youtube.com/watch?v=oyr5YTd_8i8", //Naruto Shippuden - Madara/Obito Theme
    "https://youtu.be/ERKnkHq-6XA", //Konosuba - Megumin Explosion Theme
    "https://youtu.be/CMgpN7IxkzQ", //Tokyo Ghoul - Schopfer
    "https://youtu.be/PA6ZAlPcovg", //Bleach - Invasion
    "https://youtu.be/pa00z_Bp2j4", //Attack on Titan - YouSeeBigGirl
];

const SPEECH = [
    "https://www.youtube.com/watch?v=7zciCXEcXog", //Star Wars the Force Awakens - Trailer Music
    "https://www.youtube.com/watch?v=Zz0IsffudJ0", //Pain and Gain - I Believe in Fitness
    "https://www.youtube.com/watch?v=_3ZHoBOuJ8w", //ReallySlowMotion - Dragon Rider
    "https://youtu.be/G89PbQmPnrM", //Bungou Stray Dogs - Eye of the Tiger
    "https://youtu.be/TJzxpmOogqg", //Bleach - Fade to Black
];

const HAPPY = [
    "https://www.youtube.com/watch?v=sLHZERGIGBM", //Pokemon D/P Anime - Route 201
    "https://www.youtube.com/watch?v=LB5PWnM6AlA", //Pokemon Anime - The Matter's Settled
    "https://youtu.be/0k3onazsn_Q", //Naruto - Go Go Naruto!
    "https://youtu.be/k0JOxJaqDFE", //Bleach - Magot's Dance
    "https://youtu.be/OPFcWw_H2O4", //Hyouka - OST 42
    "https://youtu.be/vkuwMtGP8Xc", //Sankarea - Chihiro to Rea
    "https://youtu.be/ovvUkilPUX0", //Chihayafuru - Karata Biyori
    "https://youtu.be/5tgFLqluZAo", //Magi - Daily Opera 01
    "https://youtu.be/GxKSFHTzGeU", //Space Battleship Yamato 2199 - Ship's Log
];

const ICONIC = [
    "https://www.youtube.com/watch?v=qSEph3TPvCs", //Pokemon Anime - Total War
    "https://youtu.be/_fGFkLQ53DM?t=4", //ClefferNotes - Super Mario Galaxy: Gusty Garden Galaxy
    "https://youtu.be/NFjE5A4UAJI", //Stardust Crusaders - Jotaro's Theme
    "https://youtu.be/lt7Uhn3-ZDk", //Hunter x Hunter - The World of Adventurers (Gon's Theme)
    "https://youtu.be/2MtOpB5LlUA", //Golden Wind - Giorno's Theme
    "https://youtu.be/t6JgG__XbRA", //Zelda: Twilight Princess - Hyrule Field
];

const CULTURE = [
    "https://www.youtube.com/watch?v=ePvSVenyAvQ", //Assassin's Creed Black Flag Freedom Cry DLC - The Root
    "https://www.youtube.com/watch?v=WMFAsidiQfc", //Black Panther - Wakanda
    "https://youtu.be/IJiHDmyhE1A?t=5", //Civilization IV - Baba Yetu
    "https://youtu.be/x_yKkVjeQpM", //Diego Herrera - El Cantador
    "https://youtu.be/4DPGjjCBcAg", //Los Cuates de Sinaloa - Negro y Azul (from Breaking Bad)
];

const BATTLE = [
    "https://www.youtube.com/watch?v=L2HsVzdA8dk", //Boruto Naruto the Movie - Spin & Burst
    "https://www.youtube.com/watch?v=9g62i7Q2qKo", //One Punch Man Season 2 - Martial Arts
    "https://youtu.be/QiUZ6cUNQnI", //Bleach - Final Getsuga Theme
];

const RAP = [
    "https://youtu.be/Ok2b0MrpA_0", //Zombieland Saga - Rap Battle
    "https://youtu.be/23Hovo63hp4", //Devilman Crybaby - Raps
];

//-------------------------------------------------------------------------------------------------------
let TRIUMPHANT_GIF = [
    "https://media.giphy.com/media/H7rPe2vxtmKgBkLwTV/giphy.gif",
    "https://media.giphy.com/media/IZtLUwN9GoGqc/giphy.gif",
    "https://media.giphy.com/media/CecNqWXmSLaNi/giphy.gif",
    "https://media.giphy.com/media/xT0GqssRweIhlz209i/giphy.gif",
    "https://media.giphy.com/media/5jYn6OIfzxI5xx9yHo/giphy.gif",
];
let HOPEFUL_GIF = [
    "https://media.giphy.com/media/EHHi29hCF0hlm/giphy.gif",
    "https://media.giphy.com/media/LXTlL0yHoXvPdAz7eR/giphy.gif",
    "https://media.giphy.com/media/4XyxBtvClEll6/giphy.gif",
    "https://media.giphy.com/media/14gv98KM3dGAuc/giphy.gif",
    "https://media.giphy.com/media/3oFzlUxAjIc3JvQvJK/giphy.gif",
];
let WITNESS_FOOD_GIF = [
    "https://media.giphy.com/media/VbK5Vfu8R0a4GGCcsx/giphy.gif",
    "https://media.giphy.com/media/lsYVtrARExRMQ/giphy.gif",
    "https://media.giphy.com/media/oHw7a1XwyobA7I1ST9/giphy.gif",
    "https://media.giphy.com/media/9r4VhdIwCZfuYirDtg/giphy.gif",
    "https://media.giphy.com/media/Y8eEEOipSPuqk/giphy.gif",
];
let SAD_GIF = [
    "https://media.giphy.com/media/qscdhWs5o3yb6/giphy.gif",
    "https://media.giphy.com/media/RUZZqXiGgTyec/giphy.gif",
    "https://media.giphy.com/media/NWb5QtGBdfQyY/giphy.gif",
    "https://media.giphy.com/media/1BXa2alBjrCXC/giphy.gif",
    "https://media.giphy.com/media/wViS9n0RqN2/giphy.gif",
];
let VILLAIN_GIF = [
    "https://media.giphy.com/media/KbqNVdrjoWDPy3WdCM/giphy.gif",
    "https://media.giphy.com/media/g9rtYY1BKdaQE/giphy.gif",
    "https://media.giphy.com/media/1FE1JqHVhhB3h59Ytc/giphy.gif",
    "https://media.giphy.com/media/zAViC51fevRTi/giphy.gif",
    "https://media.giphy.com/media/3o6gDPfI2hFxYMn3a0/giphy.gif",
];
let SPEECH_GIF = [
    "https://media.giphy.com/media/3o6wreo44azjQtfhM4/giphy.gif",
    "https://media.giphy.com/media/3oFzlUxAjIc3JvQvJK/giphy.gif",
    "https://media.giphy.com/media/OyIYHcSoSv840/giphy.gif",
    "https://media.giphy.com/media/cjzQ5nARDkIGyxT4uN/giphy.gif",
    "https://media.giphy.com/media/NnGGHE0muVqpO/giphy.gif",
];
let HAPPY_GIF = [
    "https://media.giphy.com/media/lYpOXbTyaTF60/giphy.gif",
    "https://media.giphy.com/media/NjvprsVwBehvq/giphy.gif",
    "https://media.giphy.com/media/ellxlkgbPTiM0/giphy.gif",
    "https://media.giphy.com/media/53SeMHOC9zsR2/giphy.gif",
    "https://media.giphy.com/media/h8UyZ6FiT0ptC/giphy.gif",
];
let ICONIC_GIF = [
    "https://media.giphy.com/media/2yvoLVj5RNTe5ajdfQ/giphy.gif",
    "https://media.giphy.com/media/tlGD7PDy1w8fK/giphy.gif",
    "https://media.giphy.com/media/LdzYJipCrdJqU/giphy.gif",
    "https://media.giphy.com/media/mu7RhFWLcfj9u/giphy.gif",
    "https://media.giphy.com/media/FiBzv5FRE85PO/giphy.gif",
];
let CULTURE_GIF = [
    "https://media.giphy.com/media/3ov9jGUaSkjXfcBziw/giphy.gif",
    "https://media.giphy.com/media/5k60NquoGfeWk/giphy.gif",
    "https://media.giphy.com/media/SSsgYpXZYchYQ/giphy.gif",
    "https://media.giphy.com/media/3otPoMTcoSw7MyZJdK/giphy.gif",
    "https://media.giphy.com/media/3XsniM1pgA5R6ZkCeX/giphy.gif",
];

const VIDEO_WIDTH = 640;
const VIDEO_HEIGHT = 390;

let startTime = undefined;
let watchID = "";
let songDelay = 1000; //delay in ms to give computer to pull up song

let player;
let gifPanel;
let gifBoxes = [];

function MoodButton(title, arr, gif) {
    this.title = title;
    this.arr = arr;
    this.gif = shuffle(gif);
}

let moods = [
    new MoodButton("Triumphant", TRIUMPHANT, TRIUMPHANT_GIF), new MoodButton("Hopeful", HOPEFUL, HOPEFUL_GIF), new MoodButton("Witness (Food)", WITNESS_FOOD, WITNESS_FOOD_GIF), 
    new MoodButton("Sad", SAD, SAD_GIF), new MoodButton("Villain", VILLAIN, VILLAIN_GIF), new MoodButton("Speech", SPEECH, SPEECH_GIF), 
    new MoodButton("Happy", HAPPY, HAPPY_GIF), new MoodButton("Iconic", ICONIC, ICONIC_GIF), new MoodButton("Culture", CULTURE, CULTURE_GIF), 
]

function createGifPanel() {
    gifPanel = document.getElementById("gifPanel") || document.createElement("div");
    gifPanel.id = "gifPanel";
    gifPanel.className = "gifPanel";

    for (var i = 0; i < 5; i++) {
        let newGifBox = document.createElement("div");
        newGifBox.id = "gifBox" + i;
        newGifBox.className = "gifBox";
        gifBoxes.push(newGifBox);
    }
}

function createMoodButtons() {
    let buttonHolder = document.getElementById("buttonHolder") || document.createElement("div");
    buttonHolder.id = "buttonHolder";
    buttonHolder.className = "buttonHolder";

    for (const m of moods) {
        let button = document.createElement("div");
        button.id = `moodButton-${m.title.split(" ").join("_")}`;
        button.innerText = m.title;
        button.className = "gifButton";
        button.onclick = () => {
            if (m.arr.length <= 0) {
                console.log("%c" + button.id + " has no playable songs!", "color: darkyellow");
                return;
            }

            let dupeArr = m.arr.slice(0);
            let previousSong = -1;
            let v;
            for (v = 0; v < dupeArr.length; v++) {
                var vv = dupeArr[v];
                if (watchID.length === 0) { break; }
                previousSong = vv.indexOf(watchID);
                if (previousSong !== -1) { break; }
            }

            console.log("previousSong: ", previousSong);
            if (previousSong !== -1 && dupeArr.length > 1) {
                dupeArr.splice(v, 1);
            }

            if (dupeArr.length <= 0) {
                console.log("%c" + button.id + " has only the current playable song!", "color: darkyellow");
                return;
            }

            var vid = dupeArr[Math.floor(Math.random() * dupeArr.length)];
            let vidSrc = vid.split("?v=")[1] || vid.split(".be/")[1];

            startTime = undefined;
            let checkStartTime = vidSrc.split("?t=");
            if (checkStartTime[1]) {
                vidSrc = checkStartTime[0];
                startTime = parseInt(checkStartTime[1], 10);
            }

            watchID = vidSrc;

            var thePlayer = document.getElementById("youtube-player");
            thePlayer.src = `https://www.youtube.com/embed/${watchID}?fs=0&start=${startTime || 0}&enablejsapi=1&widgetid=1`;

            setTimeout(() => toggleAudio(button), songDelay);
            console.log("Timeout set for " + `http://www.youtube.com/watch/${watchID}`);
        }

        button.onmouseover = () => {
            for (var i = 0; i < gifBoxes.length; i++) {
                let g = gifBoxes[i];
                g.style.background = `url(${m.gif[i]}) no-repeat center center`;
            }
        }

        buttonHolder.appendChild(button);
    }

    document.body.appendChild(buttonHolder);
    document.body.appendChild(gifPanel);
    for (const b of gifBoxes) {
        gifPanel.appendChild(b);
    }
}

// 2. This code loads the IFrame Player API code asynchronously.
var tag = document.createElement('script');
tag.id = "playerScript";
tag.src = "https://www.youtube.com/iframe_api";
var firstScriptTag = document.getElementsByTagName('script')[0];
firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

function onYouTubeIframeAPIReady() {
    var youtubeAudioDiv = document.getElementById("youtube-audio");
    youtubeAudioDiv.innerHTML = '<img id="youtube-icon" src=""/><div id="youtube-player"></div>';

    var vidHolder = document.getElementById("vidHolder");
    vidHolder.style = `width: ${VIDEO_WIDTH}px; height: ${VIDEO_HEIGHT}px`;

    player = new YT.Player('youtube-player', {
        width: `${VIDEO_WIDTH}`,
        height: `${VIDEO_HEIGHT}`,
        videoId: youtubeAudioDiv.dataset.video,
        playerVars: {
            autoplay: 0, //youtubeAudioDiv.dataset.autoplay,
            loop: 0,
            fs: 0,
            start: startTime || 0,
        },
        events: {
            'onReady': onPlayerReady1,
            'onStateChange': onPlayerStateChange,
        },
    });

    createGifPanel();
    createMoodButtons();
}

/*
PLAYER states
-1 – unstarted
0 – ended
1 – playing
2 – paused
3 – buffering
5 – video cued

YT.PlayerState.ENDED
YT.PlayerState.PLAYING
YT.PlayerState.PAUSED
YT.PlayerState.BUFFERING
YT.PlayerState.CUED
*/

function toggleAudio(el = undefined) {
    if (player.getPlayerState() == 1 || player.getPlayerState() == 3) { //if playing/buffering
        player.pauseVideo();
    } else { //if ready to play
        player.playVideo();
    }
}

function onPlayerReady1(event) {
    player.setPlaybackQuality("small");
    document.getElementById("youtube-audio").style.display = "block";
}

function onPlayerStateChange(event) {

}

/**
 * Shuffles array in place. ES6 version
 * @param {Array} a items An array containing the items.
 */
function shuffle(a) {
    for (let i = a.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [a[i], a[j]] = [a[j], a[i]];
    }
    return a;
}
